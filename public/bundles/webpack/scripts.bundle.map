{"version":3,"sources":["webpack:///../node_modules/webpack/buildin/global.js","webpack:///./scripts.js","webpack:///../node_modules/jquery/dist/jquery.js-exposed?f05e","webpack:///../node_modules/jquery/dist/jquery.js-exposed"],"names":["ww","$","window","width","wh","height","isMobile","hasClass","packages","home","standart","maximum","services","consultation","duration","price","customers","individual_training","massage","group_training","reaterra","avantron","physiotherapy","max_load_service","cashflows","numbers","transaction_costs_year","transaction_costs_years","operating_profit","taxes_year","fixed_costs","doctor","instructor","masseur","nurse","director","administrator","scenarios","optimistic","moderately_optimistic","base","moderately_pessimistic","pessimistic","first_month","home_package","area","lump_sum","royalty","initial_investment","discount_equipment","discount_training","cost_equipment","cost_furniture","workplaces","specialists","standart_package","maximum_package","cashflow","investments","transaction_costs","net_profit","profitability_index","payback_period","taxes","package_area","package_discount_equipment","package_discount_training","package_lump_sum","field_cashflow","field_cashflow_label","field_investments","field_transaction_costs","field_transaction_costs_label","field_area","field_years","field_range_area","field_range_year","field_region","field_working_days","field_working_hours","field_net_profit","field_profitability_index","field_payback_period","selectPackage","filter","attr","selectArea","selectYears","selectRegion","selectTaxSystem","selectDevelopmentScenario","selectWorkingDays","selectWorkingHours","document","ready","init","val","insertData","countMaxLoad","countCashflow","countInvestments","countTransactionCosts","countTaxes","countNetProfit","text","html","change","on","click","service","console","log","number_services","number_services_month","number_services_last_month","i","forEach","Math","floor","first_year","annual_growth","month_growth","pow","j","push","first_month_year","ceil","abc","parseInt","replace","transaction_costs_month","specialist","cashflow_month","countOperatingProfit","dp","depreciation","parseFloat","toFixed","operating_profit_month","taxes_month","cashflow_period","taxes_cashflow_period","operating_profit_period","cashflow_prev_period","n","split","reverse","join"],"mappings":"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","file":"scripts.bundle.js","sourcesContent":["var g;\r\n\r\n// This works in non-strict mode\r\ng = (function() {\r\n\treturn this;\r\n})();\r\n\r\ntry {\r\n\t// This works if eval is allowed (see CSP)\r\n\tg = g || Function(\"return this\")() || (1,eval)(\"this\");\r\n} catch(e) {\r\n\t// This works if the window reference is available\r\n\tif(typeof window === \"object\")\r\n\t\tg = window;\r\n}\r\n\r\n// g can still be undefined, but nothing to do about it...\r\n// We return undefined, instead of nothing here, so it's\r\n// easier to handle this case. if(!global) { ...}\r\n\r\nmodule.exports = g;\r\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ../node_modules/webpack/buildin/global.js\n// module id = 1\n// module chunks = 0 1","// import 'babel-polyfill';\r\nimport 'expose-loader?$!expose-loader?jQuery!jquery';\r\n// import device from 'device/device.js';\r\n\r\nlet ww = $(window).width(),\r\n    wh = $(window).height(),\r\n    isMobile = $('body').hasClass('mobile'),\r\n\r\n    packages = {\r\n        home: {},\r\n        standart: {},\r\n        maximum: {}\r\n    },\r\n\r\n    services = {\r\n        consultation: {duration: 30, price: 1000, customers: 1},\r\n        individual_training: {duration: 60, price: 2000, customers: 1},\r\n        massage: {duration: 30, price: 600, customers: 1},\r\n        group_training: {duration: 60, price: 500, customers: 5},\r\n        reaterra: {duration: 60, price: 500, customers: 1},\r\n        avantron: {duration: 20, price: 500, customers: 1},\r\n        physiotherapy: {duration: 20, price: 300, customers: 1}\r\n    },\r\n\r\n    max_load_service = {}, // максимальная загрузка центра по услугам\r\n\r\n    cashflows = [], // денежные поступления по годам за выбранный период\r\n\r\n    numbers = {}, // кол-во услуг за каждый месяц за выбранный период\r\n\r\n    transaction_costs_year = {},\r\n\r\n    transaction_costs_years = [],\r\n\r\n    operating_profit = {},\r\n\r\n    taxes_year = {},\r\n\r\n    fixed_costs = {\r\n        doctor: 25000,\r\n        instructor: 20000,\r\n        masseur: 15000,\r\n        nurse: 15000,\r\n        director: 30000,\r\n        administrator: 20000\r\n    },\r\n\r\n    scenarios = {\r\n        optimistic: {consultation: 30, individual_training: 70, massage: 35, group_training: 30, physiotherapy: 30, reaterra: 30, avantron: 30},\r\n        moderately_optimistic: {consultation: 25, individual_training: 60, massage: 30, group_training: 25, physiotherapy: 25, reaterra: 25, avantron: 25},\r\n        base: {consultation: 20, individual_training: 50, massage: 25, group_training: 20, physiotherapy: 20, reaterra: 20, avantron: 20},\r\n        moderately_pessimistic: {consultation: 15, individual_training: 40, massage: 17, group_training: 15, physiotherapy: 15, reaterra: 15, avantron: 15},\r\n        pessimistic: {consultation: 10, individual_training: 30, massage: 10, group_training: 10, physiotherapy: 10, reaterra: 10, avantron: 10},\r\n        first_month: {consultation: 5, individual_training: 10, massage: 5, group_training: 5, physiotherapy: 2, reaterra: 5, avantron: 2}\r\n    },\r\n\r\n    home_package = {\r\n        area: [30, 75],\r\n        lump_sum: ['200 000', '400 000'],\r\n        royalty: 7,\r\n        initial_investment: 1076500,\r\n        discount_equipment: 15,\r\n        discount_training: 5,\r\n        cost_equipment: 576500,\r\n        cost_furniture: 100000,\r\n        services: ['consultation', 'individual_training', 'massage'],\r\n        workplaces: {\r\n            consultation: 1,\r\n            individual_training: 1,\r\n            massage: 1\r\n        },\r\n        specialists: {\r\n            doctor: 1,\r\n            masseur: 1\r\n        }\r\n    },\r\n\r\n    standart_package = {\r\n        area: [75, 150],\r\n        lump_sum: ['900 000', '1 500 000'],\r\n        royalty: 7,\r\n        initial_investment: 3618000,\r\n        discount_equipment: 20,\r\n        discount_training: 10,\r\n        cost_equipment: 1918000,\r\n        cost_furniture: 200000,\r\n        services: ['consultation', 'individual_training', 'massage', 'group_training', 'physiotherapy'],\r\n        workplaces: {\r\n            consultation: 1,\r\n            individual_training: 4,\r\n            massage: 1,\r\n            group_training: 1,\r\n            physiotherapy: 1\r\n        },\r\n        specialists: {\r\n            doctor: 2,\r\n            instructor: 2,\r\n            masseur: 1,\r\n            nurse: 1,\r\n            director: 1,\r\n            administrator: 2\r\n        }\r\n    },\r\n\r\n    maximum_package = {\r\n        area: [200, 400],\r\n        lump_sum: ['2 000 000', '4 000 000'],\r\n        royalty: 7,\r\n        initial_investment: 8857500,\r\n        discount_equipment: 25,\r\n        discount_training: 15,\r\n        cost_equipment: 4557500,\r\n        cost_furniture: 300000,\r\n        services: ['consultation', 'individual_training', 'massage', 'group_training', 'physiotherapy', 'reaterra', 'avantron'],\r\n        workplaces: {\r\n            consultation: 1,\r\n            individual_training: 6,\r\n            massage: 1,\r\n            group_training: 1,\r\n            physiotherapy: 2,\r\n            reaterra: 1,\r\n            avantron: 1\r\n        },\r\n        specialists: {\r\n            doctor: 3,\r\n            instructor: 4,\r\n            masseur: 2,\r\n            nurse: 1,\r\n            director: 1,\r\n            administrator: 3\r\n        }\r\n    },\r\n\r\n    cashflow,\r\n    investments,\r\n    transaction_costs,\r\n    net_profit,\r\n    profitability_index,\r\n    payback_period,\r\n    taxes,\r\n\r\n    package_area = $('.franchise-calculator__initial-data .area span'),\r\n    package_discount_equipment = $('.franchise-calculator__initial-data .discount-equipment>span'),\r\n    package_discount_training = $('.franchise-calculator__initial-data .discount-training>span'),\r\n    package_lump_sum = $('.franchise-calculator__initial-data .lump-sum span'),\r\n\r\n    field_cashflow = $('#cashflow'),\r\n    field_cashflow_label = $('#cashflow_label b'),\r\n    field_investments = $('#investments'),\r\n    field_transaction_costs = $('#transaction_costs'),\r\n    field_transaction_costs_label = $('#transaction_costs_label b'),\r\n    field_area = $('#area'),\r\n    field_years = $('#years'),\r\n    field_range_area = $('#range_area'),\r\n    field_range_year = $('#range_year'),\r\n    field_region = $('#region'),\r\n    field_working_days = $('#working_days'),\r\n    field_working_hours = $('#working_hours'),\r\n\r\n    field_net_profit = $('.franchise-calculator__forecast .net_profit>span'),\r\n    field_profitability_index = $('.franchise-calculator__forecast .profitability_index span'),\r\n    field_payback_period = $('.franchise-calculator__forecast .payback_period span'),\r\n\r\n    selectPackage = $('.franchise-calculator__packages input').filter(':checked').attr('id'),\r\n\r\n    selectArea,\r\n    selectYears,\r\n    selectRegion,\r\n    selectTaxSystem,\r\n    selectDevelopmentScenario,\r\n    selectWorkingDays,\r\n    selectWorkingHours;\r\n\r\n    packages['home'] = home_package;\r\n    packages['standart'] = standart_package;\r\n    packages['maximum'] = maximum_package;\r\n\r\n    $(document).ready(function () {\r\n        init();\r\n    });\r\n\r\n    function init() {\r\n        selectPackage = $('.franchise-calculator__packages input').filter(':checked').attr('id');\r\n        selectYears = field_years.val();\r\n\r\n        insertData();\r\n\r\n        selectArea = field_area.val();\r\n        selectRegion = $('#region option').filter(':selected').val();\r\n        selectTaxSystem = $('#tax_system option').filter(':selected').val();\r\n        selectDevelopmentScenario = $('#development_scenario option').filter(':selected').val();\r\n        selectWorkingDays = $('#working_days').val();\r\n        selectWorkingHours = $('#working_hours').val();\r\n        countMaxLoad();\r\n        countCashflow();\r\n        countInvestments();\r\n        countTransactionCosts();\r\n        countTaxes();\r\n        countNetProfit();\r\n    }\r\n\r\n    function insertData() {\r\n        package_area.text('от ' + packages[selectPackage]['area'][0] + ' м');\r\n        package_discount_equipment.text(packages[selectPackage]['discount_equipment'] + '%');\r\n        package_discount_training.text(packages[selectPackage]['discount_training'] + '%');\r\n        package_lump_sum.html('От ' + packages[selectPackage]['lump_sum'][0] + ' руб.' + '<br>' + 'до ' + packages[selectPackage]['lump_sum'][1] + ' руб.');\r\n\r\n        field_range_area.attr('min', packages[selectPackage]['area'][0]).attr('max', packages[selectPackage]['area'][1]);\r\n        field_transaction_costs_label.text(selectYears);\r\n        field_cashflow_label.text(selectYears);\r\n        if (selectPackage === 'home') {\r\n            field_range_area.val(50);\r\n            field_area.val(50);\r\n        } else if (selectPackage === 'standart') {\r\n            field_range_area.val(150);\r\n            field_area.val(150);\r\n        } else {\r\n            field_range_area.val(200);\r\n            field_area.val(200);\r\n        }\r\n\r\n\r\n    }\r\n\r\n    $('.franchise-calculator__packages input').change(function () {\r\n        init();\r\n    });\r\n\r\n    field_range_area.on('input', function () {\r\n        field_area.val($(this).val());\r\n        selectArea = field_area.val();\r\n        countTransactionCosts();\r\n        countTaxes();\r\n        countNetProfit();\r\n    });\r\n\r\n    field_range_year.on('input', function () {\r\n        field_years.val($(this).val());\r\n        selectYears = field_years.val();\r\n        field_transaction_costs_label.text(selectYears);\r\n        field_cashflow_label.text(selectYears);\r\n        countCashflow();\r\n        countTransactionCosts();\r\n        countTaxes();\r\n        countNetProfit();\r\n    });\r\n\r\n    $('.form__amount button').click(function () {\r\n        selectWorkingDays = field_working_days.val();\r\n        selectWorkingHours = field_working_hours.val();\r\n        countMaxLoad();\r\n        countCashflow();\r\n        countTransactionCosts();\r\n        countTaxes();\r\n        countNetProfit();\r\n    });\r\n\r\n    $('#development_scenario').change(function () {\r\n        selectDevelopmentScenario = $('#development_scenario option').filter(':selected').val();\r\n        countCashflow();\r\n        countTransactionCosts();\r\n        countTaxes();\r\n        countNetProfit();\r\n    });\r\n\r\n    $('#tax_system').change(function () {\r\n        selectTaxSystem = $('#tax_system option').filter(':selected').val();\r\n        countTaxes();\r\n        countNetProfit();\r\n    });\r\n\r\n    field_region.change(function () {\r\n        selectRegion = $('#region option').filter(':selected').val();\r\n        countInvestments();\r\n        countNetProfit();\r\n    });\r\n\r\n    function countMaxLoad() {\r\n        for (var service in services) {\r\n            max_load_service[service] = selectWorkingHours * 60 / services[service]['duration'] * selectWorkingDays;\r\n        }\r\n        console.log(max_load_service);\r\n    }\r\n\r\n    function countCashflow() {\r\n        cashflow = 0;\r\n        cashflows = []; // денежные поступления по годам за выбранный период\r\n        let number_services = 0; // кол-во услуг за год\r\n        let number_services_month; // кол-во услуг в текущем месяце\r\n        let number_services_last_month = {}; //сохраняем кол-во услуг за последний месяц года, для расчета 1-ого месяца следующего года\r\n\r\n        for (let i = 1; i<= selectYears; i ++) {\r\n            numbers[i] = {};\r\n        }\r\n\r\n        for (let i = 1; i <= selectYears; i++) {\r\n            if (i === 1) {\r\n                packages[selectPackage]['services'].forEach(function (service) {\r\n                    let first_month = Math.floor(max_load_service[service] *\r\n                        scenarios['first_month'][service] / 100);\r\n                    let first_year = Math.floor(max_load_service[service] *\r\n                        scenarios[selectDevelopmentScenario][service] / 100);\r\n                    let annual_growth = (first_year - first_month) / first_month;\r\n                    let month_growth = Math.pow(1 + annual_growth, 1/12) - 1;\r\n\r\n                    number_services = first_month;\r\n                    number_services_month = first_month;\r\n                    numbers[i][service] = [first_month];\r\n\r\n                    for (let j = 1; j < 12; j++) { //считаем со 2 по 12 месяц\r\n                        number_services_month = Math.floor(number_services_month * (1 + month_growth));\r\n                        number_services += number_services_month;\r\n                        numbers[i][service].push(number_services_month);\r\n                    }\r\n\r\n                    cashflow += number_services * services[service]['price'] * services[service]['customers'];\r\n                });\r\n\r\n                cashflows.push(cashflow);\r\n            } else {\r\n                cashflow = 0;\r\n                let first_month_year;\r\n\r\n                let annual_growth = 0.15;\r\n                let month_growth = Math.pow(1 + annual_growth, 1/12) - 1;\r\n\r\n                packages[selectPackage]['services'].forEach(function (service) {\r\n                    if (i === 2) {\r\n                        first_month_year = Math.floor(max_load_service[service] *\r\n                            scenarios[selectDevelopmentScenario][service] / 100);\r\n                    } else {\r\n                        if (service === 'physiotherapy' || service === 'avantron') {\r\n                            first_month_year = number_services_last_month[service] * (1 + month_growth) < max_load_service[service] * 0.9 ?  Math.floor(number_services_last_month[service] * (1 + month_growth)) : Math.floor(max_load_service[service] * 0.9);\r\n                        } else {\r\n                            first_month_year = number_services_last_month[service] * (1 + month_growth) < max_load_service[service] * 0.9 ?  Math.ceil(number_services_last_month[service] * (1 + month_growth)) : Math.floor(max_load_service[service] * 0.9);\r\n                        }\r\n                    }\r\n\r\n                    number_services = first_month_year;\r\n                    number_services_month = first_month_year;\r\n                    numbers[i][service] = [first_month_year];\r\n\r\n                    if (service === 'physiotherapy' || service === 'avantron') {\r\n                        for (let j = 1; j < 12; j++) { //считаем со 2 по 12 месяц\r\n                            number_services_month = number_services_month * (1 + month_growth) < max_load_service[service] * 0.9 ? Math.floor(number_services_month * (1 + month_growth)) : Math.floor(max_load_service[service] * 0.9);\r\n                            number_services += number_services_month;\r\n                            numbers[i][service].push(number_services_month);\r\n                        }\r\n                    } else {\r\n                        for (let j = 1; j < 12; j++) { //считаем со 2 по 12 месяц\r\n                            number_services_month = number_services_month * (1 + month_growth) < max_load_service[service] * 0.9 ? Math.ceil(number_services_month * (1 + month_growth)) : Math.floor(max_load_service[service] * 0.9);\r\n                            number_services += number_services_month;\r\n                            numbers[i][service].push(number_services_month);\r\n                        }\r\n                    }\r\n\r\n                    number_services_last_month[service] = number_services_month;\r\n\r\n                    cashflow += number_services * services[service]['price'] * services[service]['customers'];\r\n                });\r\n                console.log(numbers);\r\n                cashflows.push(cashflow);\r\n            }\r\n        }\r\n        console.log(numbers);\r\n        console.log(cashflows);\r\n        field_cashflow.val(abc(cashflows[selectYears-1]));\r\n    }\r\n\r\n    function countInvestments() {\r\n        investments =\r\n            parseInt(packages[selectPackage]['lump_sum'][0].replace(/\\s+/g, '')) +\r\n            packages[selectPackage]['initial_investment'];\r\n\r\n        if (selectRegion === 'capital_cities') {\r\n            investments = parseInt(packages[selectPackage]['lump_sum'][1].replace(/\\s+/g, ''))\r\n            + packages[selectPackage]['cost_equipment']\r\n            + packages[selectPackage]['cost_furniture'];\r\n        } else {\r\n            investments = parseInt(packages[selectPackage]['lump_sum'][0].replace(/\\s+/g, ''))\r\n                + packages[selectPackage]['cost_equipment']\r\n                + packages[selectPackage]['cost_furniture'];\r\n        }\r\n\r\n        field_investments.val(abc(investments));\r\n        // countNetProfit();\r\n    }\r\n\r\n    function countTransactionCosts() {\r\n        transaction_costs_years = [];\r\n        let transaction_costs_month;\r\n        let specialist, service;\r\n\r\n        for (let i = 1; i<= selectYears; i ++) {\r\n            transaction_costs_year[i] = [];\r\n        }\r\n\r\n        for (let i = 1; i<= selectYears; i ++) {\r\n            for (let j = 1; j <= 12; j++) {\r\n                let cashflow_month = 0;\r\n                transaction_costs_month = (selectArea * 700 // аренда помещения\r\n                    + 5000 // комуналка\r\n                    + 5000 // клининг\r\n                    + 5000 // прочие расходы\r\n                    + 5000 // общехозяйственные расходы\r\n                    + 10000 // бухгалтерия аутсорс\r\n                    + 5000 // РКО\r\n                    + 5000 // интернет, софт\r\n                    + 15000); // маркетинг\r\n\r\n                // for (service in numbers[i]) {\r\n                //     cashflow_month += numbers[i][service][j-1] * services[service]['price'] * services[service]['customers'];\r\n                // }\r\n\r\n                for (service in numbers[i]) {\r\n                    if (service === 'consultation' || service === 'individual_training' || service === 'massage') {\r\n                        cashflow_month = numbers[i][service][j-1] * services[service]['price'] * services[service]['customers'];\r\n                        transaction_costs_month += cashflow_month * 0.2 * (1 + 0.30);\r\n                    }\r\n                }\r\n\r\n                // transaction_costs_month += cashflow_month * 0.2 * (1 + 0.30);\r\n\r\n                for(specialist in packages[selectPackage]['specialists']) {\r\n                    transaction_costs_month += packages[selectPackage]['specialists'][specialist] * fixed_costs[specialist] * (1 + 0.30);\r\n                }\r\n\r\n                transaction_costs_year[i].push(transaction_costs_month);\r\n            }\r\n        }\r\n\r\n        for (let i = 1; i<= selectYears; i ++) {\r\n            transaction_costs = 0;\r\n            transaction_costs_year[i].forEach(function (transaction_costs_month) {\r\n                transaction_costs += transaction_costs_month;\r\n            });\r\n            transaction_costs_years.push(transaction_costs);\r\n        }\r\n\r\n\r\n        field_transaction_costs.val(abc(Math.floor(transaction_costs_years[selectYears-1])));\r\n        // console.log('transaction_costs - ' + transaction_costs_years);\r\n        // console.log('transaction_costs - ');\r\n        // console.log(transaction_costs_year);\r\n\r\n        countOperatingProfit();\r\n    }\r\n\r\n    function countNetProfit() {\r\n        net_profit = 0;\r\n        payback_period = 0;\r\n        let dp;\r\n        if (selectPackage === 'standart') {\r\n            dp = Math.pow(1.1, (1/12)) - 1;\r\n        } else {\r\n            dp = Math.pow(1.2, (1/12)) - 1;\r\n        }\r\n\r\n        let depreciation = parseFloat(((packages[selectPackage]['cost_equipment'] + packages[selectPackage]['cost_furniture'])/84).toFixed(2));\r\n\r\n        for (let i = 1; i <= selectYears; i++) {\r\n            operating_profit[i].forEach(function (operating_profit, j) {\r\n                net_profit += parseFloat(((operating_profit - taxes_year[i][j] + depreciation) / Math.pow(1 + dp, j + 1 + (i-1) * 12)).toFixed(8));\r\n                if (net_profit < 0) {\r\n                    payback_period++;\r\n                }\r\n            });\r\n        }\r\n\r\n        profitability_index = net_profit/investments;\r\n\r\n        console.log('net_profit - ' + abc(net_profit));\r\n\r\n        if (selectYears == 1) {\r\n            $('.franchise-calculator__forecast .net_profit p b').text(selectYears + ' год');\r\n            $('.franchise-calculator__forecast .profitability_index p b').text(selectYears + ' год');\r\n        } else if (selectYears > 4) {\r\n            $('.franchise-calculator__forecast .net_profit p b').text(selectYears + ' лет');\r\n            $('.franchise-calculator__forecast .profitability_index p b').text(selectYears + ' лет');\r\n        } else {\r\n            $('.franchise-calculator__forecast .net_profit p b').text(selectYears + ' года');\r\n            $('.franchise-calculator__forecast .profitability_index p b').text(selectYears + ' года');\r\n        }\r\n\r\n        field_net_profit.text(abc(parseInt(net_profit)) + ' руб.');\r\n\r\n        console.log('pl - ' + profitability_index);\r\n        field_profitability_index.text(profitability_index.toFixed(2));\r\n\r\n        if (net_profit > investments) {\r\n            $('.franchise-calculator__forecast .payback_period p').text('Период окупаемости от');\r\n            $('.franchise-calculator__forecast .payback_period span').text(payback_period + ' месяцев');\r\n        } else {\r\n            $('.franchise-calculator__forecast .payback_period p').text('Установите больше период реализации проекта для расчета окупаемости')\r\n            $('.franchise-calculator__forecast .payback_period span').text('');\r\n        }\r\n\r\n    }\r\n    \r\n    function countOperatingProfit() {\r\n        let operating_profit_month;\r\n        let cashflow_month;\r\n\r\n        for (let i = 1; i<= selectYears; i ++) {\r\n            operating_profit[i] = [];\r\n        }\r\n\r\n        for (let i = 1; i<= selectYears; i ++) {\r\n            for (let j = 0; j < 12; j++) {\r\n                cashflow_month = 0;\r\n                operating_profit_month = 0;\r\n                packages[selectPackage]['services'].forEach(function (service) {\r\n                    cashflow_month += numbers[i][service][j] * services[service]['price'] * services[service]['customers'];\r\n                });\r\n                operating_profit_month = cashflow_month - cashflow_month * 0.07 - transaction_costs_year[i][j] - (packages[selectPackage]['cost_equipment'] + packages[selectPackage]['cost_furniture'])/84;\r\n                operating_profit[i].push(parseFloat(operating_profit_month.toFixed(2)));\r\n            }\r\n        }\r\n\r\n        console.log('операционная прибыль - ');\r\n        console.log(operating_profit);\r\n    }\r\n    \r\n    function countTaxes() {\r\n        let taxes_month;\r\n        let cashflow_month, cashflow_period = 0, taxes_cashflow_period, operating_profit_period = 0;\r\n        let cashflow_prev_period = 0;\r\n\r\n        for (let i = 1; i<= selectYears; i ++) {\r\n            taxes_year[i] = [];\r\n        }\r\n\r\n        if (selectTaxSystem === 'osn') {\r\n            for (let i = 1; i<= selectYears; i ++) {\r\n                for (let j = 0; j < 12; j++) {\r\n                    if (operating_profit[i][j] > 0) {\r\n                        taxes_month = operating_profit[i][j] * 0.2;\r\n                    } else {\r\n                        taxes_month = 0;\r\n                    }\r\n                    taxes_year[i].push(parseFloat(taxes_month.toFixed(2)));\r\n                }\r\n            }\r\n        } else if (selectTaxSystem === 'usn_6') {\r\n            for (let i = 1; i<= selectYears; i++) {\r\n                for (let j = 0; j < 12; j++) {\r\n                    cashflow_month = 0;\r\n                    packages[selectPackage]['services'].forEach(function (service) {\r\n                        cashflow_month += numbers[i][service][j] * services[service]['price'];\r\n                    });\r\n                    taxes_month = cashflow_month * 0.06;\r\n                    taxes_year[i].push(parseFloat(taxes_month.toFixed(2)));\r\n                }\r\n            }\r\n        } else if (selectTaxSystem === 'usn_15') {\r\n            for (let i = 1; i<= selectYears; i++) {\r\n                cashflow_period = 0;\r\n                operating_profit_period = 0;\r\n                cashflow_prev_period = 0;\r\n                for (let j = 0; j < 12; j = j + 3) {\r\n                    packages[selectPackage]['services'].forEach(function (service) {\r\n                        cashflow_period += (numbers[i][service][j] + numbers[i][service][j + 1] + numbers[i][service][j + 2]) * services[service]['price'];\r\n                    });\r\n\r\n                    taxes_cashflow_period = cashflow_period * 0.01;\r\n                    operating_profit_period += (operating_profit[i][j] + operating_profit[i][j + 1] + operating_profit[i][j + 2]) * 0.15;\r\n\r\n                    if (taxes_cashflow_period > operating_profit_period) {\r\n                        taxes_month = taxes_cashflow_period - cashflow_prev_period;\r\n                        cashflow_prev_period = taxes_month;\r\n                    } else {\r\n                        taxes_month = operating_profit_period - cashflow_prev_period;\r\n                        cashflow_prev_period = taxes_month;\r\n                    }\r\n                    taxes_year[i].push(0);\r\n                    taxes_year[i].push(0);\r\n                    taxes_year[i].push(parseFloat(taxes_month.toFixed(2)));\r\n                }\r\n            }\r\n        }\r\n\r\n        console.log('налоги - ');\r\n        console.log(taxes_year);\r\n\r\n    }\r\n\r\n    function abc(n) {\r\n        // n += \"\";\r\n        // n = new Array(4 - n.length % 3).join(\"U\") + n;\r\n        // return n.replace(/([0-9U]{3})/g, \"$1 \").replace(/U/g, \"\");\r\n        return (n + \"\").split(\"\").reverse().join(\"\").replace(/(\\d{3})/g, \"$1 \").split(\"\").reverse().join(\"\").replace(/^ /, \"\");\r\n    }\r\n\n\n\n// WEBPACK FOOTER //\n// ./scripts.js","module.exports = global[\"$\"] = require(\"-!C:\\\\xampp\\\\htdocs\\\\ekzarta\\\\node_modules\\\\expose-loader\\\\index.js?jQuery!.\\\\jquery.js\");\n\n\n//////////////////\n// WEBPACK FOOTER\n// ../node_modules/expose-loader?$!../node_modules/expose-loader?jQuery!../node_modules/jquery/dist/jquery.js-exposed\n// module id = 3\n// module chunks = 0 1","module.exports = global[\"jQuery\"] = require(\"-!.\\\\jquery.js\");\n\n\n//////////////////\n// WEBPACK FOOTER\n// ../node_modules/expose-loader?jQuery!../node_modules/jquery/dist/jquery.js-exposed\n// module id = 4\n// module chunks = 0 1"],"sourceRoot":""}